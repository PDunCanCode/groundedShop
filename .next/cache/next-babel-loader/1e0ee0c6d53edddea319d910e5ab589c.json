{"ast":null,"code":"import jwt from 'jsonwebtoken';\nimport Order from '../../models/Order';\nimport connectDb from '../../utils/connectDb';\nconnectDb();\nexport default (async (req, res) => {\n  switch (req.method) {\n    case \"GET\":\n      await handleGetRequest(req, res);\n      break;\n\n    case \"PUT\":\n      await handlePutRequest(req, res);\n      break;\n\n    default:\n      res.status(405).send(`Method ${req.method} not allowed`);\n      break;\n  }\n});\n\nconst handleGetRequest = async (req, res) => {\n  try {\n    const {\n      userId\n    } = jwt.verify(req.headers.authorization, process.env.JWT_SECRET);\n    const orders = await Order.find({\n      user: userId\n    }).sort({\n      createdAt: 'desc'\n    }).populate({\n      path: \"products.product\",\n      model: \"Product\"\n    });\n    res.status(200).json({\n      orders\n    });\n  } catch (error) {\n    // console.error(error);\n    res.status(403).send(\"Please login\");\n  }\n};\n\nconst handlePutRequest = async (req, res) => {\n  const {\n    _id,\n    status\n  } = req.body;\n  await Order.findOneAndUpdate({\n    _id\n  }, {\n    status\n  });\n  res.status(203).send('Order Updated');\n};","map":{"version":3,"sources":["C:/Users/David/Desktop/shoponix/pages/api/orders.js"],"names":["jwt","Order","connectDb","req","res","method","handleGetRequest","handlePutRequest","status","send","userId","verify","headers","authorization","process","env","JWT_SECRET","orders","find","user","sort","createdAt","populate","path","model","json","error","_id","body","findOneAndUpdate"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AAEAA,SAAS;AAET,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC/B,UAAQD,GAAG,CAACE,MAAZ;AACI,SAAK,KAAL;AACI,YAAMC,gBAAgB,CAACH,GAAD,EAAMC,GAAN,CAAtB;AACA;;AACJ,SAAK,KAAL;AACI,YAAMG,gBAAgB,CAACJ,GAAD,EAAMC,GAAN,CAAtB;AACA;;AACJ;AACIA,MAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAsB,UAASN,GAAG,CAACE,MAAO,cAA1C;AACA;AATR;AAWH,CAZD;;AAcA,MAAMC,gBAAgB,GAAG,OAAOH,GAAP,EAAYC,GAAZ,KAAoB;AACzC,MAAI;AACA,UAAM;AAAEM,MAAAA;AAAF,QAAaV,GAAG,CAACW,MAAJ,CAAWR,GAAG,CAACS,OAAJ,CAAYC,aAAvB,EAAsCC,OAAO,CAACC,GAAR,CAAYC,UAAlD,CAAnB;AACA,UAAMC,MAAM,GAAG,MAAMhB,KAAK,CAACiB,IAAN,CAAW;AAAEC,MAAAA,IAAI,EAAET;AAAR,KAAX,EACpBU,IADoB,CACf;AAAEC,MAAAA,SAAS,EAAE;AAAb,KADe,EAEpBC,QAFoB,CAEX;AACNC,MAAAA,IAAI,EAAE,kBADA;AAENC,MAAAA,KAAK,EAAE;AAFD,KAFW,CAArB;AAMApB,IAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB;AAAER,MAAAA;AAAF,KAArB;AACH,GATD,CASE,OAAOS,KAAP,EAAc;AACZ;AACAtB,IAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,cAArB;AACH;AACJ,CAdD;;AAgBA,MAAMF,gBAAgB,GAAG,OAAOJ,GAAP,EAAYC,GAAZ,KAAoB;AACzC,QAAM;AAAEuB,IAAAA,GAAF;AAAOnB,IAAAA;AAAP,MAAkBL,GAAG,CAACyB,IAA5B;AACA,QAAM3B,KAAK,CAAC4B,gBAAN,CACF;AAACF,IAAAA;AAAD,GADE,EAEF;AAACnB,IAAAA;AAAD,GAFE,CAAN;AAIAJ,EAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,eAArB;AAEH,CARD","sourcesContent":["import jwt from 'jsonwebtoken';\nimport Order from '../../models/Order';\nimport connectDb from '../../utils/connectDb';\n\nconnectDb();\n\nexport default async (req, res) => {\n    switch (req.method){\n        case \"GET\":\n            await handleGetRequest(req, res);\n            break;\n        case \"PUT\":\n            await handlePutRequest(req, res);\n            break;\n        default:\n            res.status(405).send(`Method ${req.method} not allowed`);\n            break;\n    }\n}\n\nconst handleGetRequest = async (req, res) => {\n    try {\n        const { userId } = jwt.verify(req.headers.authorization, process.env.JWT_SECRET);\n        const orders = await Order.find({ user: userId })\n        .sort({ createdAt: 'desc' })\n        .populate({\n            path: \"products.product\",\n            model: \"Product\"\n        });\n        res.status(200).json({ orders });\n    } catch (error) {\n        // console.error(error);\n        res.status(403).send(\"Please login\");\n    }\n}\n\nconst handlePutRequest = async (req, res) => {\n    const { _id, status } = req.body;\n    await Order.findOneAndUpdate(\n        {_id},\n        {status}\n    )\n    res.status(203).send('Order Updated');\n   \n}"]},"metadata":{},"sourceType":"module"}