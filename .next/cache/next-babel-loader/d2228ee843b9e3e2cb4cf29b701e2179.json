{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\shoponix\\\\components\\\\Cart\\\\CartSummary.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { Button, Segment, Divider } from 'semantic-ui-react';\nimport calculateCartTotal from '../../utils/calculateCartTotal';\n\nvar CartSummary = function CartSummary(_ref) {\n  _s();\n\n  var products = _ref.products,\n      handleCheckout = _ref.handleCheckout,\n      success = _ref.success;\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      cartAmout = _React$useState2[0],\n      setCartAmaount = _React$useState2[1];\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      stripeAmount = _React$useState4[0],\n      setStripeAmount = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      isCartEmpty = _React$useState6[0],\n      setCartEmpty = _React$useState6[1];\n\n  React.useEffect(function () {\n    var _calculateCartTotal = calculateCartTotal(products),\n        cartTotal = _calculateCartTotal.cartTotal,\n        stripeTotal = _calculateCartTotal.stripeTotal;\n\n    setCartAmaount(cartTotal);\n    setStripeAmount(stripeTotal);\n    setCartEmpty(products.length === 0);\n  }, [products]);\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, __jsx(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), __jsx(Segment, {\n    clearing: true,\n    size: \"large\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, __jsx(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, \"Sub total:\"), \" $\", cartAmout, __jsx(StripeCheckout, {\n    name: \"GroundedHLC\",\n    amount: stripeAmount,\n    image: products.length > 0 ? products[0].product.mediaUrl : '',\n    currency: \"USD\",\n    shippingAddress: true,\n    billingAddress: true,\n    zipCode: true,\n    stripeKey: \"pk_test_kvLYA12KHorL24g3aTjLu4oc00SFcodPaA\",\n    token: handleCheckout,\n    triggerEvent: \"onClick\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    icon: \"cart\",\n    color: \"green\",\n    floated: \"right\",\n    content: \"Checkout\",\n    disabled: isCartEmpty || success,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }))));\n};\n\n_s(CartSummary, \"io03EmaKZohft4Wmkh1QEed+eME=\");\n\n_c = CartSummary;\nexport default CartSummary;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartSummary\");","map":{"version":3,"sources":["C:/Users/David/Desktop/shoponix/components/Cart/CartSummary.js"],"names":["React","StripeCheckout","Button","Segment","Divider","calculateCartTotal","CartSummary","products","handleCheckout","success","useState","cartAmout","setCartAmaount","stripeAmount","setStripeAmount","isCartEmpty","setCartEmpty","useEffect","cartTotal","stripeTotal","length","product","mediaUrl"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,OAA1B,QAAyC,mBAAzC;AACA,OAAOC,kBAAP,MAA+B,gCAA/B;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAA2C;AAAA;;AAAA,MAAxCC,QAAwC,QAAxCA,QAAwC;AAAA,MAA9BC,cAA8B,QAA9BA,cAA8B;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAAA,wBACzBT,KAAK,CAACU,QAAN,CAAe,CAAf,CADyB;AAAA;AAAA,MACtDC,SADsD;AAAA,MAC3CC,cAD2C;;AAAA,yBAErBZ,KAAK,CAACU,QAAN,CAAe,CAAf,CAFqB;AAAA;AAAA,MAEtDG,YAFsD;AAAA,MAExCC,eAFwC;;AAAA,yBAGzBd,KAAK,CAACU,QAAN,CAAe,KAAf,CAHyB;AAAA;AAAA,MAGtDK,WAHsD;AAAA,MAGzCC,YAHyC;;AAK7DhB,EAAAA,KAAK,CAACiB,SAAN,CAAgB,YAAM;AAAA,8BACeZ,kBAAkB,CAACE,QAAD,CADjC;AAAA,QACZW,SADY,uBACZA,SADY;AAAA,QACDC,WADC,uBACDA,WADC;;AAEpBP,IAAAA,cAAc,CAACM,SAAD,CAAd;AACAJ,IAAAA,eAAe,CAACK,WAAD,CAAf;AACAH,IAAAA,YAAY,CAACT,QAAQ,CAACa,MAAT,KAAoB,CAArB,CAAZ;AACD,GALD,EAKG,CAACb,QAAD,CALH;AAOA,SACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,OAAD;AAAS,IAAA,QAAQ,MAAjB;AAAkB,IAAA,IAAI,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,QACgCI,SADhC,EAEE,MAAC,cAAD;AACE,IAAA,IAAI,EAAC,aADP;AAEE,IAAA,MAAM,EAAEE,YAFV;AAGE,IAAA,KAAK,EAAEN,QAAQ,CAACa,MAAT,GAAkB,CAAlB,GAAsBb,QAAQ,CAAC,CAAD,CAAR,CAAYc,OAAZ,CAAoBC,QAA1C,GAAqD,EAH9D;AAIE,IAAA,QAAQ,EAAC,KAJX;AAKE,IAAA,eAAe,EAAE,IALnB;AAME,IAAA,cAAc,EAAE,IANlB;AAOE,IAAA,OAAO,EAAE,IAPX;AAQE,IAAA,SAAS,EAAC,4CARZ;AASE,IAAA,KAAK,EAAEd,cATT;AAUE,IAAA,YAAY,EAAC,SAVf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYE,MAAC,MAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAC,OAFR;AAGE,IAAA,OAAO,EAAC,OAHV;AAIE,IAAA,OAAO,EAAC,UAJV;AAKE,IAAA,QAAQ,EAAEO,WAAW,IAAIN,OAL3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CAFF,CAFF,CADF;AA4BD,CAxCD;;GAAMH,W;;KAAAA,W;AA0CN,eAAeA,WAAf","sourcesContent":["import React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { Button, Segment, Divider } from 'semantic-ui-react';\nimport calculateCartTotal from '../../utils/calculateCartTotal';\n\nconst CartSummary = ({ products, handleCheckout, success }) => {\n  const [cartAmout, setCartAmaount] = React.useState(0);\n  const [stripeAmount, setStripeAmount] = React.useState(0);\n  const [isCartEmpty, setCartEmpty] = React.useState(false);\n\n  React.useEffect(() => {\n    const { cartTotal, stripeTotal } = calculateCartTotal(products);\n    setCartAmaount(cartTotal);\n    setStripeAmount(stripeTotal);\n    setCartEmpty(products.length === 0);\n  }, [products]);\n\n  return (\n    <React.Fragment>\n      <Divider />\n      <Segment clearing size='large'>\n        <strong>Sub total:</strong> ${cartAmout}\n        <StripeCheckout\n          name='GroundedHLC'\n          amount={stripeAmount}\n          image={products.length > 0 ? products[0].product.mediaUrl : ''}\n          currency='USD'\n          shippingAddress={true}\n          billingAddress={true}\n          zipCode={true}\n          stripeKey='pk_test_kvLYA12KHorL24g3aTjLu4oc00SFcodPaA'\n          token={handleCheckout}\n          triggerEvent='onClick'\n        >\n          <Button\n            icon='cart'\n            color='green'\n            floated='right'\n            content='Checkout'\n            disabled={isCartEmpty || success}\n          />\n        </StripeCheckout>\n      </Segment>\n    </React.Fragment>\n  );\n};\n\nexport default CartSummary;\n"]},"metadata":{},"sourceType":"module"}